package com.dave.HelloWorld;


import static com.codename1.ui.CN.*;

import com.codename1.ui.*;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class HelloWorld {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Main page", new BorderLayout());
        hi.add(BorderLayout.NORTH , new Label("Hi World"));
        Button button = new Button("Hello Button!!");
        button.addActionListener(e -> Dialog.show("dialigue box title!", "Wassuuuppp This is the easiest package to learn that I have ever found!! and it is so much like JavaFX!!!","OK", null));
        hi.add(BorderLayout.CENTER, button);
        GridLayout options = new GridLayout(1,3);
//        hi.add(BorderLayout.SOUTH, options);
        Button front = new Button("Front page");

//        MenuBar menuBar = new MenuBar();
//        hi.add(BorderLayout.SOUTH, menuBar);

//        front.addActionListener(e -> current.setMenuBar() );
        hi.show();
    }

    public Form selecta(){
        GridLayout selectorGrid = new GridLayout(1,3);
        Form selectionPane = new Form("Selection Pane", selectorGrid);
        Button front = new Button("Front page");
        front.addActionListener(e -> );
        selectionPane.add(front);


    }

//    public ActionListener pageChangeButton(Form oldPage, Form newpage){
//        newpage = oldPage;
//        oldPage.show();
//
//
//    }


    public class PageTurner implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent actionEvent) {

        }
    }
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
